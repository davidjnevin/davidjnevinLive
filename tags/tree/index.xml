<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tree on David J Nevin</title>
    <link>https://www.davidjnevin.com/tags/tree/</link>
    <description>Recent content in Tree on David J Nevin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2022 David J. Nevin</copyright>
    <lastBuildDate>Sun, 19 Jun 2022 02:08:26 +0200</lastBuildDate><atom:link href="https://www.davidjnevin.com/tags/tree/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Binary Search Tree</title>
      <link>https://www.davidjnevin.com/code/binary_search_tree/</link>
      <pubDate>Sun, 19 Jun 2022 02:08:26 +0200</pubDate>
      
      <guid>https://www.davidjnevin.com/code/binary_search_tree/</guid>
      <description>Definition A binary search tree (BST) is a tree data structure in which nodes are arranged according to the following property.
The value of the left child of any node will be less than whatever value in that node, and the value of the right child of the node will be greater than the value in that node.
If there aren&amp;rsquo;t exactly two children, the reference to the non-existent child will contain null value.</description>
    </item>
    
  </channel>
</rss>
