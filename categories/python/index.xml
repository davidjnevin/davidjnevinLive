<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on David J Nevin</title>
    <link>https://www.davidjnevin.com/categories/python/</link>
    <description>Recent content in Python on David J Nevin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Â© 2022 David J. Nevin</copyright>
    <lastBuildDate>Sun, 19 Jun 2022 02:08:26 +0200</lastBuildDate><atom:link href="https://www.davidjnevin.com/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Binary Search Tree</title>
      <link>https://www.davidjnevin.com/code/binary_search_tree/</link>
      <pubDate>Sun, 19 Jun 2022 02:08:26 +0200</pubDate>
      
      <guid>https://www.davidjnevin.com/code/binary_search_tree/</guid>
      <description>Definition A binary search tree (BST) is a tree data structure in which nodes are arranged according to the following property.
The value of the left child of any node will be less than whatever value in that node, and the value of the right child of the node will be greater than the value in that node.
If there aren&amp;rsquo;t exactly two children, the reference to the non-existent child will contain null value.</description>
    </item>
    
    <item>
      <title>Binary Tree Terms</title>
      <link>https://www.davidjnevin.com/code/binary_tree_terms/</link>
      <pubDate>Fri, 17 Jun 2022 23:42:31 +0200</pubDate>
      
      <guid>https://www.davidjnevin.com/code/binary_tree_terms/</guid>
      <description>Binary Tree Terms A tree has a root and leaves.
A root node has no parent nodes.
A leaf node has zero children.
A lef node is an external node, non leaf node are internal nodes.
The degree of a node is the number of children of that node. The lines between nodes are called edges.
Binary Tree Characteristics In a binary tree, each node has a maximum of two children.</description>
    </item>
    
    <item>
      <title>Arrays Educative</title>
      <link>https://www.davidjnevin.com/code/arrays_educative/</link>
      <pubDate>Fri, 17 Jun 2022 20:43:36 +0200</pubDate>
      
      <guid>https://www.davidjnevin.com/code/arrays_educative/</guid>
      <description>Finished the Arrays section I&amp;rsquo;ve been working through the Data Structures and Algorithms course on Educative to develop my python skills.
Learned the two sum problem, optimal task assignment, intersections of two sorted lists, arbitrary precision increment and array advance games solutions.
Fascinating look into the the world of algorithms. Lots more to se of course but really enjoying the progress and the insights.
I also did a quick &amp;ldquo;level test&amp;rdquo; and received a proficiency badge.</description>
    </item>
    
  </channel>
</rss>
